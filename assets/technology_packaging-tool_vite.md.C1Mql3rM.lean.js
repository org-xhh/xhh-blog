import{_ as t,c as e,o as a,a3 as o}from"./chunks/framework.C5U8cnJv.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"technology/packaging-tool/vite.md","filePath":"technology/packaging-tool/vite.md"}'),i={name:"technology/packaging-tool/vite.md"},s=o('<ul><li><a href="https://cn.vitejs.dev/config/build-options" target="_blank" rel="noreferrer">Vite</a></li></ul><h3 id="和-webpack-启动流程比较" tabindex="-1">和 webpack 启动流程比较 <a class="header-anchor" href="#和-webpack-启动流程比较" aria-label="Permalink to &quot;和 webpack 启动流程比较&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Vite启动流程</th><th>Webpack启动流程</th></tr></thead><tbody><tr><td>1. 启动服务器</td><td>1. 扫描所有模块</td></tr><tr><td>2. 按需编译首个页面</td><td>2. 打包成bundle</td></tr><tr><td>3. 其他模块等请求时再处理</td><td>3. 启动服务器</td></tr></tbody></table><p>Vite 采用了即时编译的方式，在开发模式下通过浏览器原生支持的 ES Module 特性进行加载，不需要打包。</p><h3 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.env.[mode]</span></span></code></pre></div><p>只有以 VITE_ 为前缀的变量才会暴露给经过 vite 处理的代码。</p><p>代码中访问：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>console.log(import.meta.env.VITE_SOME_KEY)</span></span></code></pre></div><h3 id="热更新" tabindex="-1">热更新 <a class="header-anchor" href="#热更新" aria-label="Permalink to &quot;热更新&quot;">​</a></h3><p>Vite 内置了基于浏览器原生模块热更新的开发服务器，无需额外配置即可实现快速的热更新。</p>',11),n=[s];function d(l,c,p,r,h,b){return a(),e("div",null,n)}const v=t(i,[["render",d]]);export{g as __pageData,v as default};
