import{_ as a,c as s,o as t,a3 as n}from"./chunks/framework.C5U8cnJv.js";const q=JSON.parse('{"title":"precommit 代码提交检查","description":"","frontmatter":{},"headers":[],"relativePath":"tool/git/precommit设置.md","filePath":"tool/git/precommit设置.md","lastUpdated":1718682295000}'),e={name:"tool/git/precommit设置.md"},p=n(`<h1 id="precommit-代码提交检查" tabindex="-1">precommit 代码提交检查 <a class="header-anchor" href="#precommit-代码提交检查" aria-label="Permalink to &quot;precommit 代码提交检查&quot;">​</a></h1><h3 id="git提交代码-precommit设置-强制代码格式化" tabindex="-1">git提交代码 precommit设置 强制代码格式化 <a class="header-anchor" href="#git提交代码-precommit设置-强制代码格式化" aria-label="Permalink to &quot;git提交代码 precommit设置 强制代码格式化&quot;">​</a></h3><p>1.安装模块(--save-dev)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;husky&quot;: &quot;^1.3.1&quot;</span></span>
<span class="line"><span>&quot;lint-staged&quot;: &quot;^12.3.4&quot;</span></span></code></pre></div><p>2.package.json 配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;husky&quot;: {</span></span>
<span class="line"><span>  &quot;hooks&quot;: {</span></span>
<span class="line"><span>     &quot;pre-commit&quot;: &quot;lint-staged&quot;</span></span>
<span class="line"><span>   }</span></span>
<span class="line"><span> },</span></span>
<span class="line"><span> &quot;lint-staged&quot;: {</span></span>
<span class="line"><span>    &quot;src/**/*.{js,vue}&quot;: [</span></span>
<span class="line"><span>      &quot;prettier --write&quot;,</span></span>
<span class="line"><span>      &quot;eslint --fix&quot;</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span> }</span></span></code></pre></div><p>3.添加要提交的代码进暂存区，进行git commit操作，会依次执行 prettier --write和eslint --fix，代码格式如果有问题无法提交成功</p><p>如果想要越过检查，添加 --no-verify</p><p>备注：如果项目根目录自动生成.eslintcache缓存文件，想要去掉的话，查看是否有 &quot;eslint --cache --fix&quot; 配置，去掉--cache即可</p><h3 id="vue3项目上述方法未生效-解决方案" tabindex="-1">vue3项目上述方法未生效，解决方案： <a class="header-anchor" href="#vue3项目上述方法未生效-解决方案" aria-label="Permalink to &quot;vue3项目上述方法未生效，解决方案：&quot;">​</a></h3><p>1.package.json</p><p>scripts添加命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;prepare&quot;: &quot;husky install&quot;</span></span></code></pre></div><p>(npm install 之后自动执行)</p><p>2.在.husky文件夹下新增pre-commit文件，内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>npm run lint</span></span>
<span class="line"><span>npm run format</span></span></code></pre></div><p>提交代码时，husky 会自动执行 .husky/pre-commit 文件中的脚本，如果脚本执行失败（比如 eslint 检查不通过），提交将会被中断。</p>`,17),i=[p];function o(l,c,u,r,d,h){return t(),s("div",null,i)}const g=a(e,[["render",o]]);export{q as __pageData,g as default};
