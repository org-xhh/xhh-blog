import{_ as e,c as s,o as a,a3 as n}from"./chunks/framework.C5U8cnJv.js";const g=JSON.parse('{"title":"环境变量","description":"","frontmatter":{},"headers":[],"relativePath":"technology/vue/环境变量.md","filePath":"technology/vue/环境变量.md"}'),p={name:"technology/vue/环境变量.md"},t=n(`<h1 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h1><h2 id="vue-webpack" tabindex="-1">vue+webpack <a class="header-anchor" href="#vue-webpack" aria-label="Permalink to &quot;vue+webpack&quot;">​</a></h2><p>webpack3 注入 环境变量：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plugins: [</span></span>
<span class="line"><span>    new webpack.DefinePlugin({</span></span>
<span class="line"><span>        &#39;process.env&#39;: {</span></span>
<span class="line"><span>            NODE_ENV1: &#39;production&#39;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    })</span></span>
<span class="line"><span>]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>console.log(&#39;process.env&#39;, process.env.NODE_ENV1)</span></span></code></pre></div><p>webpack4+：</p><p>提供 mode 配置选项，告知 webpack 使用相应环境的内置优化。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>module.exports = {</span></span>
<span class="line"><span>  mode: &#39;production&#39;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>或者从 CLI 参数中传递：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>webpack --mode=production</span></span></code></pre></div><p>获取：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>process.env.NODE_ENV</span></span></code></pre></div><p>还可以使用 cross-env:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cross-env NODE_ENV=development webpack</span></span></code></pre></div><p><a href="https://v4.webpack.docschina.org/concepts/mode/" target="_blank" rel="noreferrer">https://v4.webpack.docschina.org/concepts/mode/</a></p><h2 id="vue-cli-service" tabindex="-1">vue-cli-service <a class="header-anchor" href="#vue-cli-service" aria-label="Permalink to &quot;vue-cli-service&quot;">​</a></h2><ul><li>默认环境变量：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>process.env.NODE_ENV</span></span>
<span class="line"><span></span></span>
<span class="line"><span>development 模式用于 vue-cli-service serve</span></span>
<span class="line"><span>test 模式用于 vue-cli-service test:unit</span></span>
<span class="line"><span>production 模式用于 vue-cli-service build 和 vue-cli-service test:e2e</span></span></code></pre></div><ul><li>指定环境变量：</li></ul><p>配置 .env.[mode] 文件，通过传递 --mode 选项参数为命令行覆写默认的模式(NODE_ENV)或新增其他全局变量，所有的环境变量都从对应的环境文件中载入。</p><p><a href="https://cli.vuejs.org/zh/guide/mode-and-env.html" target="_blank" rel="noreferrer">https://cli.vuejs.org/zh/guide/mode-and-env.html</a></p><h2 id="vue3-vite" tabindex="-1">vue3+vite <a class="header-anchor" href="#vue3-vite" aria-label="Permalink to &quot;vue3+vite&quot;">​</a></h2><p>Vite 自动将环境变量暴露在 import.meta.env 对象下</p><ul><li>默认环境变量：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import.meta.env.MODE</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&quot;scripts&quot;: {</span></span>
<span class="line"><span>    &quot;dev&quot;: &quot;vite&quot;, // development</span></span>
<span class="line"><span>    &quot;build&quot;: &quot;vite build&quot;, // production</span></span>
<span class="line"><span>    &quot;preview&quot;: &quot;vite preview&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li>指定环境变量：</li></ul><p>配置 .env.[mode] 文件，通过 --mode 指定模式新增其他全局变量</p><p>.env.development:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>VITE_BASE_URL = &#39;/api&#39;</span></span></code></pre></div><p>获取：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import.meta.env.VITE_BASE_URL</span></span></code></pre></div><p><a href="https://cn.vitejs.dev/guide/env-and-mode.html" target="_blank" rel="noreferrer">https://cn.vitejs.dev/guide/env-and-mode.html</a></p>`,31),i=[t];function l(c,o,d,r,u,v){return a(),s("div",null,i)}const b=e(p,[["render",l]]);export{g as __pageData,b as default};
