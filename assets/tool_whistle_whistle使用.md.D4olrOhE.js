import{_ as t,c as e,o as a,a3 as s}from"./chunks/framework.C5U8cnJv.js";const l="/xhh-blog/assets/image.6iGa9Pk7.png",r="/xhh-blog/assets/image-1.DufFL9Cb.png",i="/xhh-blog/assets/image-2.CHTG9I8f.png",h="/xhh-blog/assets/image-3.Xd00qAZl.png",o="/xhh-blog/assets/image-4.nBqYzOVY.png",p="/xhh-blog/assets/image-5.CXb_5zdW.png",k=JSON.parse('{"title":"whistle使用","description":"","frontmatter":{},"headers":[],"relativePath":"tool/whistle/whistle使用.md","filePath":"tool/whistle/whistle使用.md","lastUpdated":1718682295000}'),n={name:"tool/whistle/whistle使用.md"},c=s('<h1 id="whistle使用" tabindex="-1">whistle使用 <a class="header-anchor" href="#whistle使用" aria-label="Permalink to &quot;whistle使用&quot;">​</a></h1><h2 id="安装whistle" tabindex="-1">安装whistle <a class="header-anchor" href="#安装whistle" aria-label="Permalink to &quot;安装whistle&quot;">​</a></h2><p>npm install -g whistle</p><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><p>whistle w2 start -p 7061（就可以打开：<a href="http://192.168.1.38:7061/#network%EF%BC%89" target="_blank" rel="noreferrer">http://192.168.1.38:7061/#network）</a> 或 w2 start（默认 8899）</p><h2 id="配置代理" tabindex="-1">配置代理 <a class="header-anchor" href="#配置代理" aria-label="Permalink to &quot;配置代理&quot;">​</a></h2><p>（1）浏览器代理：安装 Chrome 代理插件：推荐安装 SwitchyOmega 配置</p><p>IP：<a href="http://192.168.1.38" target="_blank" rel="noreferrer">http://192.168.1.38</a></p><p>配置端口：7061 (或者默认的 8899，是上一步自己设置的端口号)</p><p>如下图所示： <img src="'+l+'" alt="alt text"> 点击“应用选项”生效。</p><p>开启此代理服务： <img src="'+r+'" alt="alt text"> （2）手机抓包配置，iOS 为例（需要先安装证书） ：</p><p>无线局域网 =&gt; 配置代理 =&gt; 手动</p><p>服务器：192.168.1.38</p><p>端口：7061</p><h2 id="pc-和手机端安装根证书" tabindex="-1">PC 和手机端安装根证书 <a class="header-anchor" href="#pc-和手机端安装根证书" aria-label="Permalink to &quot;PC 和手机端安装根证书&quot;">​</a></h2><p>打开：<a href="http://192.168.1.38:7061/#network" target="_blank" rel="noreferrer">http://192.168.1.38:7061/#network</a></p><p>依次点击：HTTPS - Download RootCA</p><p>如下图所示： <img src="'+i+'" alt="alt text"></p><p>PC端：安装在受信任的根证书</p><p>iOS 需要证书信任设置：</p><p>（1）通用 - VPN与设备管理 - 验证whistle...</p><p>（2）通用 - 关于本机 - 证书信任设置 - 信任whistle</p><h2 id="rules-和-values-使用示例" tabindex="-1">Rules 和 Values 使用示例 <a class="header-anchor" href="#rules-和-values-使用示例" aria-label="Permalink to &quot;Rules 和 Values 使用示例&quot;">​</a></h2><p>（1）环境代理，在 Rules 配置</p><p>例如： <img src="'+h+'" alt="alt text"></p><p>（2）本地模拟接口返回值</p><p>Rules 配置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://xxx.com/getMainData resBody://{main.json}</span></span></code></pre></div><p>Values 需要添加 main.json <img src="'+o+'" alt="alt text"></p><p><img src="'+p+'" alt="alt text"></p><h2 id="whistle-文档" tabindex="-1">whistle 文档 <a class="header-anchor" href="#whistle-文档" aria-label="Permalink to &quot;whistle 文档&quot;">​</a></h2><p><a href="http://wproxy.org/whistle/install.html" target="_blank" rel="noreferrer">http://wproxy.org/whistle/install.html</a></p>',32),d=[c];function _(m,g,u,w,b,x){return a(),e("div",null,d)}const P=t(n,[["render",_]]);export{k as __pageData,P as default};
