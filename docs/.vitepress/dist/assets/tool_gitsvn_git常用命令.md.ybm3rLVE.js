import{_ as a,c as t,o as e,a3 as i}from"./chunks/framework.C5U8cnJv.js";const o="/xhh-blog/assets/image-7.Co77kDf_.png",r="/xhh-blog/assets/image-6.uF0w5A7F.png",q=JSON.parse('{"title":"Git","description":"","frontmatter":{},"headers":[],"relativePath":"tool/gitsvn/git常用命令.md","filePath":"tool/gitsvn/git常用命令.md"}'),h={name:"tool/gitsvn/git常用命令.md"},l=i('<h1 id="git" tabindex="-1"><a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">Git</a> <a class="header-anchor" href="#git" aria-label="Permalink to &quot;[Git](https://git-scm.com/downloads)&quot;">​</a></h1><h2 id="git-简介" tabindex="-1">git 简介 <a class="header-anchor" href="#git-简介" aria-label="Permalink to &quot;git 简介&quot;">​</a></h2><p>分布式版本控制系统，每个开发者都可以在本地完整地复制整个代码仓库，独立进行开发和版本控制。</p><h2 id="git常用命令" tabindex="-1">git常用命令 <a class="header-anchor" href="#git常用命令" aria-label="Permalink to &quot;git常用命令&quot;">​</a></h2><h3 id="克隆代码库" tabindex="-1">克隆代码库 <a class="header-anchor" href="#克隆代码库" aria-label="Permalink to &quot;克隆代码库&quot;">​</a></h3><p>git clone <a href="mailto:git@gitee.com" target="_blank" rel="noreferrer">git@gitee.com</a>:org-xhh/viteproject.git</p><h3 id="创建-git文件夹-存储仓库相关信息" tabindex="-1">创建.git文件夹，存储仓库相关信息 <a class="header-anchor" href="#创建-git文件夹-存储仓库相关信息" aria-label="Permalink to &quot;创建.git文件夹，存储仓库相关信息&quot;">​</a></h3><p>git init</p><h3 id="关联新的远程仓库" tabindex="-1">关联新的远程仓库 <a class="header-anchor" href="#关联新的远程仓库" aria-label="Permalink to &quot;关联新的远程仓库&quot;">​</a></h3><p>git remote add origin [仓库地址]</p><h3 id="查看当前配置的远程仓库" tabindex="-1">查看当前配置的远程仓库 <a class="header-anchor" href="#查看当前配置的远程仓库" aria-label="Permalink to &quot;查看当前配置的远程仓库&quot;">​</a></h3><p>git remote -v</p><h3 id="拉取远程master分支代码并合并到本地分支" tabindex="-1">拉取远程master分支代码并合并到本地分支 <a class="header-anchor" href="#拉取远程master分支代码并合并到本地分支" aria-label="Permalink to &quot;拉取远程master分支代码并合并到本地分支&quot;">​</a></h3><p>git pull origin master</p><h3 id="拉取代码" tabindex="-1">拉取代码 <a class="header-anchor" href="#拉取代码" aria-label="Permalink to &quot;拉取代码&quot;">​</a></h3><p>git pull</p><h3 id="推送代码" tabindex="-1">推送代码 <a class="header-anchor" href="#推送代码" aria-label="Permalink to &quot;推送代码&quot;">​</a></h3><p>git push</p><h3 id="基于当前分支新建分支并切换至该分支" tabindex="-1">基于当前分支新建分支并切换至该分支 <a class="header-anchor" href="#基于当前分支新建分支并切换至该分支" aria-label="Permalink to &quot;基于当前分支新建分支并切换至该分支&quot;">​</a></h3><p>git checkout -b xhh-code</p><h3 id="添加当前目录的所有文件到暂存区" tabindex="-1">添加当前目录的所有文件到暂存区 <a class="header-anchor" href="#添加当前目录的所有文件到暂存区" aria-label="Permalink to &quot;添加当前目录的所有文件到暂存区&quot;">​</a></h3><p>git add .</p><h3 id="提交暂存区到仓库区" tabindex="-1">提交暂存区到仓库区 <a class="header-anchor" href="#提交暂存区到仓库区" aria-label="Permalink to &quot;提交暂存区到仓库区&quot;">​</a></h3><p>git commit -m [message]</p><h3 id="切换到指定分支-并更新工作区" tabindex="-1">切换到指定分支，并更新工作区 <a class="header-anchor" href="#切换到指定分支-并更新工作区" aria-label="Permalink to &quot;切换到指定分支，并更新工作区&quot;">​</a></h3><p>git checkout develop</p><h3 id="合并xhh-code分支到develop" tabindex="-1">合并xhh-code分支到develop <a class="header-anchor" href="#合并xhh-code分支到develop" aria-label="Permalink to &quot;合并xhh-code分支到develop&quot;">​</a></h3><p>git checkout develop</p><p>git merge xhh-code</p><h3 id="暂存当前的修改" tabindex="-1">暂存当前的修改 <a class="header-anchor" href="#暂存当前的修改" aria-label="Permalink to &quot;暂存当前的修改&quot;">​</a></h3><p>git stash</p><h3 id="恢复最近一次暂存的修改-并从暂存列表中删除" tabindex="-1">恢复最近一次暂存的修改，并从暂存列表中删除 <a class="header-anchor" href="#恢复最近一次暂存的修改-并从暂存列表中删除" aria-label="Permalink to &quot;恢复最近一次暂存的修改，并从暂存列表中删除&quot;">​</a></h3><p>git stash pop</p><h3 id="撤销某个更改" tabindex="-1">撤销某个更改 <a class="header-anchor" href="#撤销某个更改" aria-label="Permalink to &quot;撤销某个更改&quot;">​</a></h3><p>git revert [commit-hash]</p><p>git push</p><p><img src="'+o+'" alt="alt text"></p><h3 id="回到之前的某个版本" tabindex="-1">回到之前的某个版本 <a class="header-anchor" href="#回到之前的某个版本" aria-label="Permalink to &quot;回到之前的某个版本&quot;">​</a></h3><p>不保留工作区的修改: git reset --hard [commit-hash]</p><p>保留工作区的修改: git reset --soft [commit-hash]</p><p>git push origin &lt;分支名&gt; --force</p><p><img src="'+r+'" alt="alt text"></p><h3 id="忽略文件大小写" tabindex="-1">忽略文件大小写 <a class="header-anchor" href="#忽略文件大小写" aria-label="Permalink to &quot;忽略文件大小写&quot;">​</a></h3><p>git config core.ignorecase true(false)</p><h3 id="删除文件" tabindex="-1">删除文件 <a class="header-anchor" href="#删除文件" aria-label="Permalink to &quot;删除文件&quot;">​</a></h3><p>git rm -r --cached [file]</p><h3 id="commit之后撤销" tabindex="-1">commit之后撤销 <a class="header-anchor" href="#commit之后撤销" aria-label="Permalink to &quot;commit之后撤销&quot;">​</a></h3><p>git reset --soft HEAD^</p><h3 id="检查当前-git-全局设置" tabindex="-1">检查当前 git 全局设置 <a class="header-anchor" href="#检查当前-git-全局设置" aria-label="Permalink to &quot;检查当前 git 全局设置&quot;">​</a></h3><p>git config --global -l</p><h3 id="在master分支创建tag" tabindex="-1">在master分支创建tag <a class="header-anchor" href="#在master分支创建tag" aria-label="Permalink to &quot;在master分支创建tag&quot;">​</a></h3><p>git tag v1.1.0</p><p>git push origin v1.1.0</p><h3 id="查看所有-tag" tabindex="-1">查看所有 tag <a class="header-anchor" href="#查看所有-tag" aria-label="Permalink to &quot;查看所有 tag&quot;">​</a></h3><p>git tag</p><h3 id="切换到某个tag" tabindex="-1">切换到某个tag <a class="header-anchor" href="#切换到某个tag" aria-label="Permalink to &quot;切换到某个tag&quot;">​</a></h3><p>git checkout tags/v1.0.0</p><p>或</p><p>git checkout v1.0.0</p><h3 id="启用-git-长路径支持" tabindex="-1">启用 Git 长路径支持 <a class="header-anchor" href="#启用-git-长路径支持" aria-label="Permalink to &quot;启用 Git 长路径支持&quot;">​</a></h3><p>文件层级深：Filename too long fatal: Unable to process path vendor/a/b/c...，拉取及提交代码均有报错。</p><p>全局生效</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config --system core.longpaths true</span></span></code></pre></div><p>仅配置当前仓库</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config core.longpaths true</span></span></code></pre></div><hr><h3 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h3><p>HBuilderX文档 - Git常用命令</p><p><a href="https://hx.dcloud.net.cn/Tutorial/SourceControl/Git/README?id=git%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4" target="_blank" rel="noreferrer">https://hx.dcloud.net.cn/Tutorial/SourceControl/Git/README?id=git常用命令</a></p>',69),s=[l];function n(c,d,p,g,u,m){return e(),t("div",null,s)}const f=a(h,[["render",n]]);export{q as __pageData,f as default};
