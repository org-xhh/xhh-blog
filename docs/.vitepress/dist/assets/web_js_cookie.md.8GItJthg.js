import{_ as e,c as o,o as i,a3 as a}from"./chunks/framework.C5U8cnJv.js";const t="/xhh-blog/assets/image-4.Ba4bqtLi.png",_=JSON.parse('{"title":"cookie 详解","description":"","frontmatter":{},"headers":[],"relativePath":"web/js/cookie.md","filePath":"web/js/cookie.md"}'),l={name:"web/js/cookie.md"},s=a(`<h1 id="cookie-详解" tabindex="-1">cookie 详解 <a class="header-anchor" href="#cookie-详解" aria-label="Permalink to &quot;cookie 详解&quot;">​</a></h1><h2 id="cookie" tabindex="-1">cookie <a class="header-anchor" href="#cookie" aria-label="Permalink to &quot;cookie&quot;">​</a></h2><ul><li>由网站存储在用户的浏览器中</li><li>大多数浏览器对单个Cookie的大小限制为4KB</li><li>没有设置过期时间的 Cookie，关闭浏览器就会被清空</li></ul><h2 id="js设置cookie" tabindex="-1">JS设置Cookie <a class="header-anchor" href="#js设置cookie" aria-label="Permalink to &quot;JS设置Cookie&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const cookieExpirationHours = 7 * 24 // 7天后过期</span></span>
<span class="line"><span>const expiresIn = new Date(Date.now() + cookieExpirationHours * 60 * 60 * 1000)</span></span>
<span class="line"><span>document.cookie = &quot;username=cookieName; expires=&quot; + expiresIn + &quot;; path=/; Secure; HttpOnly; SameSite=Strict&quot;</span></span></code></pre></div><p><img src="`+t+'" alt="alt text"></p><h2 id="cookie-属性" tabindex="-1">Cookie 属性 <a class="header-anchor" href="#cookie-属性" aria-label="Permalink to &quot;Cookie 属性&quot;">​</a></h2><ul><li><p>Expires 和 Max-Age：Cookie的过期时间</p></li><li><p>Domain：Cookie的作用域，默认是当前域名</p></li><li><p>Path：只有特定目录下的页面才可以读取Cookie</p></li><li><p>Secure：设置Secure属性，确保Cookie仅在HTTPS连接中传输</p></li><li><p>HttpOnly：标记为HttpOnly的Cookie不能被JavaScript访问，减少XSS攻击风险</p></li><li><p>SameSite：防止CSRF攻击，取值： Strict、Lax、None。</p><p>SameSite有三个属性：</p><ul><li>‌Strict‌：当网址与请求域名完全一致时，Cookie才会被发送；</li><li>‌Lax‌：在跨站点的情况下，只有对GET请求才会发送Cookie，而对于POST请求等非安全的HTTP方法则不会发送；</li><li>‌None‌：无论是跨站点还是同站点，Cookie都会被发送。当设置SameSite=None时，必须同时设置Secure属性，以确保Cookie只能通过HTTPS发送。</li></ul></li></ul><h2 id="异步请求携带cookie" tabindex="-1">异步请求携带cookie <a class="header-anchor" href="#异步请求携带cookie" aria-label="Permalink to &quot;异步请求携带cookie&quot;">​</a></h2><ol><li><p>网址和接口域名同源时，异步请求头里会自动携带 Cookie</p></li><li><p>跨域请求时，异步请求(axios)需要设置 withCredentials: true</p></li></ol>',10),c=[s];function n(r,p,k,h,d,u){return i(),o("div",null,c)}const m=e(l,[["render",n]]);export{_ as __pageData,m as default};
