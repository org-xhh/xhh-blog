import{_ as i,D as p,c as l,j as e,a,I as s,w as n,a3 as o,o as r}from"./chunks/framework.C5U8cnJv.js";const h="/xhh-blog/assets/image-6.B9Q6Mo2v.png",d="/xhh-blog/assets/image-7.Ex5ghYfw.png",c="/xhh-blog/assets/image-10.BXrWLxnR.png",m="/xhh-blog/assets/image-11.DG4oADRN.png",N=JSON.parse('{"title":"发布自己的包到npm","description":"","frontmatter":{},"headers":[],"relativePath":"nodejs/发布npm包.md","filePath":"nodejs/发布npm包.md"}'),_={name:"nodejs/发布npm包.md"},u=o('<h1 id="发布自己的包到npm" tabindex="-1">发布自己的包到npm <a class="header-anchor" href="#发布自己的包到npm" aria-label="Permalink to &quot;发布自己的包到npm&quot;">​</a></h1><h3 id="npm-init" tabindex="-1">npm init <a class="header-anchor" href="#npm-init" aria-label="Permalink to &quot;npm init&quot;">​</a></h3><p>根据提示输入，会自动生成package.json文件（name,version和main入口 三项必不可少）</p><h3 id="新建utils-js-进行开发" tabindex="-1">新建utils.js 进行开发 <a class="header-anchor" href="#新建utils-js-进行开发" aria-label="Permalink to &quot;新建utils.js 进行开发&quot;">​</a></h3><p><img src="'+h+'" alt="alt text"></p><h3 id="新建test-utils-js测试功能" tabindex="-1">新建test-utils.js测试功能 <a class="header-anchor" href="#新建test-utils-js测试功能" aria-label="Permalink to &quot;新建test-utils.js测试功能&quot;">​</a></h3><p><img src="'+d+`" alt="alt text"></p><h3 id="代码中使用import出现报错" tabindex="-1">代码中使用import出现报错： <a class="header-anchor" href="#代码中使用import出现报错" aria-label="Permalink to &quot;代码中使用import出现报错：&quot;">​</a></h3><p>SyntaxError: Cannot use import statement outside a module</p><p>解决办法：在package.json中添加&quot;type&quot;:&quot;module&quot;</p><h3 id="新建readme-md文件说明" tabindex="-1">新建readme.md文件说明 <a class="header-anchor" href="#新建readme-md文件说明" aria-label="Permalink to &quot;新建readme.md文件说明&quot;">​</a></h3><h3 id="如果要引入第三方模块" tabindex="-1">如果要引入第三方模块 <a class="header-anchor" href="#如果要引入第三方模块" aria-label="Permalink to &quot;如果要引入第三方模块&quot;">​</a></h3><p>注意点：</p><p>（1）npm i module-name --save（在dependencies下）</p><p>（2）新增.gitignore文件，不需要提交node_modules文件</p><h3 id="压缩js代码" tabindex="-1">压缩js代码 <a class="header-anchor" href="#压缩js代码" aria-label="Permalink to &quot;压缩js代码&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install uglify-js</span></span>
<span class="line"><span>uglifyjs utils.js -c -m -o utils-uglify.js</span></span></code></pre></div>`,17),b={id:"登录-npm-login",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#登录-npm-login","aria-label":'Permalink to "登录 <font color=red>npm login</font>"'},"​",-1),x=e("p",null,"会提示输入用户名，密码，邮箱和邮箱一次性验证码",-1),f={id:"发布-npm-publish",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#发布-npm-publish","aria-label":'Permalink to "发布 <font color=red>npm publish</font>"'},"​",-1),j=o('<h3 id="如何发布作用域包" tabindex="-1">如何发布作用域包? <a class="header-anchor" href="#如何发布作用域包" aria-label="Permalink to &quot;如何发布作用域包?&quot;">​</a></h3><p>1.创建组织 <img src="'+c+'" alt="alt text"></p><p>2.为组织取一个作用域名 <img src="'+m+'" alt="alt text"> 比如取名: web-xhh</p><p>3.创建代码与组织的联系</p><p>npm init --scope=web-xhh</p><p>备注：name必须取名在该作用域下 package name: (@web-xhh/...)</p><p>4.发布</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm publish --access public</span></span></code></pre></div><p>发布成功后就可以在该组织下看到已发布的Packages</p><p><a href="https://www.npmjs.com/settings/web-xhh/packages" target="_blank" rel="noreferrer">https://www.npmjs.com/settings/web-xhh/packages</a></p>',10);function q(P,v,w,T,C,y){const t=p("font");return r(),l("div",null,[u,e("h3",b,[a("登录 "),s(t,{color:"red"},{default:n(()=>[a("npm login")]),_:1}),a(),g]),x,e("h3",f,[a("发布 "),s(t,{color:"red"},{default:n(()=>[a("npm publish")]),_:1}),a(),k]),j])}const V=i(_,[["render",q]]);export{N as __pageData,V as default};
