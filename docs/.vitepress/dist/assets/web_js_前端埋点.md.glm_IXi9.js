import{_ as t,D as s,c as n,I as o,w as r,a3 as a,o as i,j as c}from"./chunks/framework.C5U8cnJv.js";const x=JSON.parse('{"title":"前端埋点方式","description":"","frontmatter":{},"headers":[],"relativePath":"web/js/前端埋点.md","filePath":"web/js/前端埋点.md"}'),l={name:"web/js/前端埋点.md"},p=a('<h1 id="前端埋点方式" tabindex="-1">前端埋点方式 <a class="header-anchor" href="#前端埋点方式" aria-label="Permalink to &quot;前端埋点方式&quot;">​</a></h1><h2 id="基于-ajax-的埋点上报" tabindex="-1">基于 ajax 的埋点上报 <a class="header-anchor" href="#基于-ajax-的埋点上报" aria-label="Permalink to &quot;基于 ajax 的埋点上报&quot;">​</a></h2><p>和后端约定一个接口通过ajax进行数据上报，缺点：请求会存在跨域风险。</p><h2 id="基于-img-的埋点上报" tabindex="-1">基于 img 的埋点上报 <a class="header-anchor" href="#基于-img-的埋点上报" aria-label="Permalink to &quot;基于 img 的埋点上报&quot;">​</a></h2><p>使用 script、link、img 支持跨域的标签去实现数据上报功能</p>',5),d=c("p",null,"当使用 script 或 link 进行埋点上报时，需要挂载到页面上，而且载入 js/css 资源可能还会阻塞页面渲染，因此对于需要频繁上报的埋点而言，script和link并不适合。",-1),_=a('<p>使用 <strong>img</strong> 标签做埋点上报</p><p>img标签加载并不需要挂载到页面上，设置图片 src 属性就可以直接请求图片。</p><p>使用：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const newUrl = `${url}?${arr.join(&#39;&amp;&#39;)}`; // 参数拼接在请求地址上</span></span>\n<span class="line"><span>const img = document.createElement(&#39;img&#39;);</span></span>\n<span class="line"><span>img.src = newUrl;</span></span></code></pre></div><blockquote><p>注：通常埋点上报会使用gif图，合法的 GIF 只需要 43 个字节； 大多采用的是1*1像素的透明GIF来上报。</p></blockquote><h2 id="navigator-sendbeacon" tabindex="-1">navigator.sendBeacon <a class="header-anchor" href="#navigator-sendbeacon" aria-label="Permalink to &quot;navigator.sendBeacon&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon</a></p>',7);function h(m,g,u,b,f,v){const e=s("font");return i(),n("div",null,[p,o(e,{color:"gray"},{default:r(()=>[d]),_:1}),_])}const P=t(l,[["render",h]]);export{x as __pageData,P as default};
